/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Main;

import de.congrace.exp4j.Calculable;
import de.congrace.exp4j.ExpressionBuilder;
import de.congrace.exp4j.UnknownFunctionException;
import de.congrace.exp4j.UnparsableExpressionException;
import org.nfunk.jep.ParseException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import org.lsmp.djep.djep.DJep;
import org.nfunk.jep.Node;

/**
 *
 * @author ZamarripaAlonso
 */
public class Principal extends javax.swing.JFrame {

    /**
     * Creates new form Principal
     */
    public Principal() {
        initComponents();
        this.setLocationRelativeTo(null);
        ecuacions.setVisible(false);
        prime.setVisible(false);
        jLabel9.setVisible(false);
        
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        ecuacion = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        metodo = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        xl1 = new javax.swing.JTextField();
        xm1 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        r = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        error = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        errorp = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        ecuacions = new javax.swing.JTextField();
        prime = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        jLabel1.setText("Insert the equation:");

        jLabel2.setText("Choose the method:");

        metodo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Bisection", "False position", "Newton-Raphson", "Secant" }));
        metodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                metodoActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton1.setText("Solve");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel3.setText("Error less than:");

        xm1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xm1ActionPerformed(evt);
            }
        });

        jLabel4.setText("Xl");

        jLabel5.setText("Xu");

        jLabel6.setText("Root:");

        jLabel7.setText("Error:");

        jLabel8.setText("%");

        jLabel9.setText("f'(x):");

        prime.setText("Prime");
        prime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                primeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ecuacions)
                        .addGap(30, 30, 30)
                        .addComponent(prime)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(ecuacion)
                        .addGap(19, 19, 19))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(51, 51, 51)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addGap(18, 18, 18)
                                        .addComponent(errorp, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel8))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel6)
                                        .addGap(18, 18, 18)
                                        .addComponent(r, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(jLabel1))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGap(75, 75, 75)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(175, 175, 175)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(xl1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(xm1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(metodo, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(error, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel3))
                .addGap(0, 82, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(144, 144, 144))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ecuacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(xl1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(xm1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(metodo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(error, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ecuacions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(prime))
                .addGap(18, 18, 18)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(r, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(errorp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(48, 48, 48))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        double p=100, res=0, xm=0, f1, f2, fant;
        int apu=0;
            double er = Double.parseDouble(error.getText().toString());
            double g1 = Double.parseDouble(xl1.getText().toString());
            double g2 = Double.parseDouble(xm1.getText().toString());
            String ecuation = ecuacion.getText();
        String Derivation;
        Derivation = Derivar(ecuation);
        
            
       int method = metodo.getSelectedIndex();
      
       if(method==0){
          double a=0;
          if(Calculate(g1)>Calculate(g2)){
          a=g1;
          g1=g2;
          g2=a;
      }
        while(p>er){
            if(apu>=2){
                f1=Calculate(g1);
                f2=Calculate(g2);
                xm=((g2)+(g1))/(2);
                p=Math.abs(((xm-g1)/xm)*100);
                 if(p<er){
                    r.setText(String.valueOf(xm));
                    errorp.setText(String.valueOf(p));
                    break;
                }
                 fant=Calculate(xm);
                if(fant>f1&&fant<0){
                    g1=xm;
                }else if(fant<f2&&fant>0){
                    g2=xm;
                }
            }else{
                if(apu==0){
                    f1=Calculate(g1);
                    f2=Calculate(g2);
                    xm=((g2)+(g1))/(2);
                    fant=Calculate(xm);
                    if(fant>f1&&fant<0){
                        g1=xm;
                    }else if(fant<f2&&fant>0){
                        g2=xm;
                    }
                }
                if(apu==1){
                    f1=Calculate(g1);
                    f2=Calculate(g2);
                    xm=((g2)+(g1))/(2);
                    fant=Calculate(xm);
                    if(fant>f1&&fant<0){
                        g1=xm;
                    }else if(fant<f2&&fant>0){
                        g2=xm;
                    }
                    p=Math.abs(((g2-g1)/g2)*100);
                }

            }
            apu++;
        }            
       }   
       
       
       if(method==1){
       double a=0;
       if(Calculate(g1)>Calculate(g2)){
          a=g1;
          g1=g2;
          g2=a;
      }
        while(p>er){
            if(apu>=2){
                f1=Calculate(g1);
                f2=Calculate(g2);
                xm=((g2*f1)-(g1*f2))/(f1-f2);
                p=Math.abs(((xm-g1)/xm)*100);
                 if(p<er){
                    r.setText(String.valueOf(xm));
                    errorp.setText(String.valueOf(p));
                    break;
                }
                 fant=Calculate(xm);
                if(fant>f1&&fant<0){
                    g1=xm;
                }else if(fant<f2&&fant>0){
                    g2=xm;
                }
            }else{
                if(apu==0){
                    f1=Calculate(g1);
                    f2=Calculate(g2);
                    xm=((g2*f1)-(g1*f2))/(f1-f2);

                    fant=Calculate(xm);
                    if(fant>f1&&fant<0){
                        g1=xm;
                    }else if(fant<f2&&fant>0){
                        g2=xm;
                    }
                }

                if(apu==1){
                    f1=Calculate(g1);
                    f2=Calculate(g2);
                    xm=((g2*f1)-(g1*f2))/(f1-f2);

                    fant=Calculate(xm);
                    if(fant>f1&&fant<0){
                        g1=xm;
                    }else if(fant<f2&&fant>0){
                        g2=xm;
                    }
                    p=Math.abs(((g2-g1)/g2)*100);
                }

            }
            apu++;
        }            
       }
       
       if(method==2){
       int ap=0;
       double err= 100.0;
       double var1=Double.parseDouble(xm1.getText()),var2=0;
       while(err<Double.parseDouble(error.getText())){
       if(ap==0){    
       var2=var1-((Calculate1(var1,"x^3-20"))/((Calculate1(var1,"3*x^2"))));
       ap++;}
       else{
       var1=var2;
       var2=var1-((Calculate1(var1,"x^3-20"))/((Calculate1(var1,"3*x^2"))));
       err=(var2-var1)/var2;
       ap++;}}
       
       if(method==3){
        //secant(g1,g2);
           double a=0;
          if(Calculate(g1)>Calculate(g2)){
          a=g1;
          g1=g2;
          g2=a;
      }
        while(p>er){
            if(apu>=2){
                f1=Calculate(g1);
                f2=Calculate(g2);
                xm=((g2)+(g1))/(2);
                p=Math.abs(((xm-g1)/xm)*100);
                 if(p<er){
                    r.setText(String.valueOf(xm));
                    errorp.setText(String.valueOf(p));
                    break;
                }
                 fant=Calculate(xm);
                if(fant>f1&&fant<0){
                    g1=xm;
                }else if(fant<f2&&fant>0){
                    g2=xm;
                }
            }else{
                if(apu==0){
                    f1=Calculate(g1);
                    f2=Calculate(g2);
                    xm=((g2)+(g1))/(2);
                    fant=Calculate(xm);
                    if(fant>f1&&fant<0){
                        g1=xm;
                    }else if(fant<f2&&fant>0){
                        g2=xm;
                    }
                }
                if(apu==1){
                    f1=Calculate(g1);
                    f2=Calculate(g2);
                    xm=((g2)+(g1))/(2);
                    fant=Calculate(xm);
                    if(fant>f1&&fant<0){
                        g1=xm;
                    }else if(fant<f2&&fant>0){
                        g2=xm;
                    }
                    p=Math.abs(((g2-g1)/g2)*100);
                }

            }
            apu++;
        }            
       }  
    }//GEN-LAST:event_jButton1ActionPerformed

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        // TODO add your handling code here:
        
          
    }//GEN-LAST:event_formMouseClicked

    private void primeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_primeActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_primeActionPerformed

    private void metodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_metodoActionPerformed
        // TODO add your handling code here:
         int me = metodo.getSelectedIndex();
       
       if(me==2){
           xl1.setVisible(false);
           jLabel4.setVisible(false);
           ecuacions.setVisible(true);
           jLabel9.setVisible(true);
           jLabel5.setText("Xi");
       // String ecuation = ecuacion.getText();
        //String Derivation;
        //Derivation = Derivar(ecuation);
        //ecuacions.setText(String.valueOf(Derivation));
       }
    }//GEN-LAST:event_metodoActionPerformed

    private void xm1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xm1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_xm1ActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public String Derivar (String ecuacion){
        String Derivada= "";
        DJep Derivar= new DJep();
        Derivar.addStandardFunctions();
        Derivar.addStandardConstants();
        Derivar.addComplex();
        Derivar.setAllowAssignment(true);
        Derivar.setAllowUndeclared(true);
        Derivar.setImplicitMul(true);
        Derivar.addStandardDiffRules();
        
        try{
        Node node = Derivar.parse(ecuacion);
        Node Diff = Derivar.differentiate(node, "x");
        Node sim = Derivar.simplify(Diff);
        Derivada = Derivar.toString(sim);
        }catch(ParseException e){
            e.printStackTrace();
        }
        return Derivada;
    }

double Calculate(Double Val){
        double root=0;
        Calculable calc;
        try {
            calc = new ExpressionBuilder(ecuacion.getText())
            .withVariable("x",Val)
            .withVariable("a",Val)
            .build();

            double result=calc.calculate();
            r.setText(String.valueOf(calc.getExpression()));
            root=result;
            
        } catch (UnknownFunctionException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnparsableExpressionException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
        return(root);
    }

double  Calculate1(Double f, String eq){
        Double result1 = 0.0;
        try {
            Calculable calc = new ExpressionBuilder(eq).withVariable("x", f).build();
        result1=calc.calculate();
        } catch (UnknownFunctionException | UnparsableExpressionException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
        return result1;}

double  secant(Double xo, Double xn){
    int ap=0;
    double p=100;
    double er=Double.parseDouble(error.getText());
           if(p>er){
        double aux=xn;
        xn=xn-((Calculate1(xn,ecuacion.getText())*(xn-xo)))/(Calculate1(xn,ecuacion.getText())-Calculate1(xo,ecuacion.getText()));
        xo=aux;
        if(ap==0){
            ap++;
            secant(xo,xn);}
        else{
            p = Math.abs(((xn-xo)/xn)*100);
            ap++;
            secant(xo,xn);}
           }
           return(xo);
       }


    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ecuacion;
    private javax.swing.JTextField ecuacions;
    private javax.swing.JTextField error;
    private javax.swing.JTextField errorp;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JComboBox metodo;
    private javax.swing.JButton prime;
    private javax.swing.JTextField r;
    private javax.swing.JTextField xl1;
    private javax.swing.JTextField xm1;
    // End of variables declaration//GEN-END:variables
}
